#include <stdio.h>
# define BAG_WEIGHT 20
#define NUM_OF_ITEMS 5
#define STRING_LENGTH (20+1) 

int main()
{
   char items[NUM_OF_ITEMS][STRING_LENGTH]; 
   int values[NUM_OF_ITEMS];
   int weights[NUM_OF_ITEMS];
   int selected_bool[NUM_OF_ITEMS]={0}; 
   for (size_t i = 0; i < NUM_OF_ITEMS; i++)
   {
        scanf("%s %d %d", items[i], &values[i], &weights[i]);
   }
   int Knapsack_weight= my_knapsack(values, weights, selected_bool);
   printf("Maximum profit: %d", &Knapsack_weight);
   printf("Selected items: ");
   for (size_t i = 0; i < NUM_OF_ITEMS; i++)
   {
        if (selected_bool[i]==1)
            {
                printf("%s ", &items[i]);
            }
    
   }
   
   return 0;
}

int my_knapsack( int values[], int weights[], int selected_bool[])
{
    int mat[NUM_OF_ITEMS+1][BAG_WEIGHT+1];
    for (size_t i = 0; i < BAG_WEIGHT+1; i++)
    {
        mat[0][i]=0;
    }
    for (size_t i = 1; i < NUM_OF_ITEMS+1; i++)
    {
        mat[i][0]=0;
    }
    for (size_t i = 1; i < NUM_OF_ITEMS+1; i++)
    {
        for (size_t j = 1; j < BAG_WEIGHT+1; j++)
        {
            if(weights[i]>j)
            {
                mat[i][j]=mat[i-1][j];
            }
            else
            {
                if (j-weights[i]<0)
                {
                    mat[i][j]=mat[i-1][j];
                }
                else
                {
                    if (mat[i-1][j]>(mat[i-1][j-weights[i]]+v[i]))
                        {
                           mat[i][j]=mat[i-1][j];
                        }
                    else
                        {
                            mat[i][j]=mat[i-1][j-weights[i]]+v[i]; 
                        }
                }
            }
        }
    }
    size_t i=NUM_OF_ITEMS;
    size_t j=BAG_WEIGHT;
    while (i>0 && j>0)
    {
    
            if (mat[i][j]==mat[i-1][j])
            {
                i--;
            }
            else
            {
                selected_bool[i]=1;
                i--;
                j-=weights[i];
            }
        
    }
    return mat[NUM_OF_ITEMS][BAG_WEIGHT];
}